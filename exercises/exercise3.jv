pipeline GoodsPipeline
{
    // Sequence of operations for the data pipeline
    GoodsExtractor
        -> GoodsTextFileInterpreter
        -> GoodsCSVInterpreter 
        -> GoodsRowDeleter
        -> GoodsSelector
        -> TransportedGoodsHeaderWriter
        -> QuantityNameHeaderWriter
        -> GoodsTableInterpreter
        -> ConvertUppercaseMonth
        -> ConvertUppercaseFebruar
        -> GoodsLoader;

    // Block for extracting data via HTTP
    block GoodsExtractor oftype HttpExtractor    
    {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    // Block for interpreting text files
    block GoodsTextFileInterpreter oftype TextFileInterpreter 
    { 
        encoding: "latin3";
    }

    // Block for interpreting CSV files
    block GoodsCSVInterpreter oftype CSVInterpreter 
    {
        delimiter: ";";
    }

    // Block for deleting specific rows
    block GoodsRowDeleter oftype RowDeleter
    {
        delete: [row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 41338, row 41339];
    }

    // Block for selecting data columns
    block GoodsSelector oftype CellRangeSelector
    {
        select: range A1:AU*;
    }

    // Block for writing headers for transported goods
    block TransportedGoodsHeaderWriter oftype CellWriter
    {
        at: range A1:E1;
        write: ["year", "month", "goods_id", "goods_name", "goods_source"];
    }

    // Block for writing headers for quantities
    block QuantityNameHeaderWriter oftype CellWriter
    {
        at: range AT1:AU1;
        write: ["abroad", "total"];
    }

    // Block for interpreting the goods table
    block GoodsTableInterpreter oftype TableInterpreter 
    {
        header: true;
        columns: [
            "year" oftype positiveInteger,
            "month" oftype GermanMonth,
            "goods_id" oftype nst7,
            "goods_name" oftype text,
            "goods_source" oftype text, 
            "abroad" oftype positiveInteger,
            "total" oftype positiveInteger,
        ];
    }

    // Constraint and transformation blocks for data types and modifications
    valuetype positiveInteger oftype integer
    {
        constraints: [setPositiveInteger];
    }

    constraint setPositiveInteger on decimal:
        value >= 0;

    valuetype nst7 oftype text
    {
        constraints: [setNST7];
    }

    constraint setNST7 oftype RegexConstraint
    {
        regex: /^NST7-[A-Z0-9]{3}$/;
    }

    valuetype GermanMonth oftype text
    {
        constraints: [setGermanMonth];
    }

    constraint setGermanMargin oftype Allovius on text {
        list:['Januar','Februar','March','April','May','June','July','August','September','October','November','December'];
    }

    transform ConvertUppercase 
    {
        from inputName oftype text;
        to outputName oftype text;

        outputName: inputName replace /Januar/ with 'JANUAR' ;
    }
    
    block ConvertUppercaseMonth oftype TableTransformer
    {
        inputColumns: ['month'];
        outputColumn: 'month';
        use: ConvertUppercase;
    }

    transform ConvertUppercaseFebruary
    {
        from inputName oftype text;
        to outputName oftype text;
        outputName: inputName replace /Februar/ with 'FEBRUAR';
    }
    
    block ConvertUppercaseFebruar oftype TableTransformer
    {
    inputColumns: ['month'];
    outputColumn: 'month';
    use: ConvertUppercaseFebruary;
    }

    // Block for loading data into SQLite
    block GoodsLoader oftype SQLiteLoader {
        table: "goods";
        file: "goodsTransportedByTrain.sqlite";
    }
}
