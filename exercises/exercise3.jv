pipeline TransportGoodsPipeline
{
    // Define the flow of the pipeline processing steps
    DataExtractor
        -> FileDecoder
        -> CSVParser 
        -> RowCleaner
        -> ColumnSelector
        -> HeaderSetter
        -> DataTableInterpreter
        -> MonthUppercaseConverter
        -> GoodsDataLoader;

    // Block to extract data from a specified URL
    block DataExtractor oftype HttpExtractor    
    {
        url: "https://www-genesis.destatis.de/genesis/downloads/00/tables/46131-0014_00.csv";
    }

    // Block to decode the extracted file with specific encoding
    block FileDecoder oftype TextFileInterpreter 
    { 
        encoding: "latin3";
    }

    // Block to parse the CSV data using a delimiter
    block CSVParser oftype CSVInterpreter 
    {
        delimiter: ";";
    }

    // Block to delete specific unnecessary rows
    block RowCleaner oftype RowDeleter
    {
        delete: [row 1, row 2, row 3, row 4, row 5, row 6, row 7, row 41338, row 41339];
    }

    // Block to select useful columns from the dataset
    block ColumnSelector oftype CellRangeSelector
    {
        select: range A1:AU*;
    }

    // Block to write headers for selected columns
    block HeaderSetter oftype MultipleCellWriter
    {
        ranges: {
            range A1:E1,
            range AT1:AU1
        };
        values: {
            ["year", "month", "goods_id", "goods_name", "goods_source"],
            ["abroad", "total"]
        };
    }

    // Block to define and interpret the structure of the data table
    block DataTableInterpreter oftype TableInterpreter 
    {
        header: true;
        columns: [
            "year" as positiveInteger,
            "month" as GermanMonth,
            "goods_id" as nst7,
            "goods_name" as text,
            "goods_source" as text, 
            "abroad" as positiveInteger,
            "total" as positiveInteger,
        ];
    }

    // Transformation to standardize month names to uppercase
    block MonthUppercaseConverter oftype TableTransformer
    {
        inputColumns: ['month'];
        outputColumn: 'month';
        transformations: [
            {
                match: "Januar",
                replacement: "JANUAR"
            },
            {
                match: "Februar",
                replacement: "FEBRUAR"
            }
        ];
    }

    // Block to load the processed data into a SQLite database
    block GoodsDataLoader oftype SQLiteLoader {
        table: "goods";
        file: "goodsTransportedByTrain.sqlite";
    }
}
